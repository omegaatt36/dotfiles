# ========== p10k instant prompt ==========
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ========== oh-my-zsh ==========
export ZSH="${HOME}/.oh-my-zsh"
POWERLEVEL9K_MODE='nerdfont-complete'
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
    git
    zsh-syntax-highlighting
    zsh-autosuggestions
    history-substring-search
    fzf-tab
    wakatime
)
source $ZSH/oh-my-zsh.sh


# ========== docker ==========
if command -v docker &> /dev/null; then
  alias dk=docker
  alias dkc="docker compose"
  source <(docker completion zsh)
fi


# ========== kubectl ==========
if command -v kubectl &> /dev/null; then
  source <(kubectl completion zsh)
  alias k=kubectl
fi


# ========== podman ==========
if command -v podman &> /dev/null; then
  source <(podman completion zsh)
fi


# ========== terraform ==========
if command -v terraform &> /dev/null; then
  autoload -U +X bashcompinit && bashcompinit
  complete -o nospace -C $(which terraform) terraform
fi


# ========== argocd ==========
if command -v argocd &> /dev/null; then
  alias argocd="__lazy_argocd"
  __lazy_argocd() {
      source <(argocd completion zsh)
      compdef _argocd argocd
      argocd "$@"
  }
fi


# ========== helm ==========
if command -v helm &> /dev/null; then
  source <(helm completion zsh)
fi

# bind home & end key
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
alias zh_locale='
export LC_ALL=zh_TW.UTF-8
export LANG=zh_TW.UTF-8
export LANGUAGE=zh_TW.UTF-8
export LC_MESSAGE=zh_TW.UTF-8
export LC_TIME=zh_TW.UTF-8'

alias en_locale='
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_MESSAGE=en_US.UTF-8
export LC_TIME=en_US.UTF-8'

en_locale

# ========== other env ==========
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# ========== powerlevel10k ==========
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


# tmux
export TMUX_PLUGIN_MANAGER_PATH=${HOME}/.tmux/plugins/tpm/

# golang
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export GOPROXY=https://proxy.golang.org,direct
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin

# zen browser
export PATH=$PATH:/usr/local/zen

# npm
export PATH="${HOME}/.npm-global/bin":"${PATH}"

# rust
[ -f ${HOME}/.cargo/env ] && source ${HOME}/.cargo/env
if command -v bat &> /dev/null; then alias cat=bat; fi
if command -v eza &> /dev/null;
then
  alias ls="eza --icons=always"
  alias ll="eza --icons=always -lh"
  alias tree="eza --icons=always --tree"
fi

# fzf
if command -v fzf &> /dev/null;
then
    # eval "$(fzf --zsh)"
    export FZF_DEFAULT_OPTS="--layout=reverse \
    --info=inline \
    --height=80% \
    --multi \
    --prompt='∼ ' \
    --pointer='▶' \
    --marker='✓' \
    --bind '?:toggle-preview' \
    --bind 'ctrl-a:select-all' \
    --bind 'ctrl-e:execute(vim {+} >/dev/tty)' \
    --bind 'ctrl-v:execute(code {+})'"

    show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

    # export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
    export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
    export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

    _fzf_compgen_path() {
      fd --hidden --follow --exclude ".git" --exclude "node_modules" . ~ "$1"
    }

    _fzf_compgen_dir() {
      fd --type d --hidden --follow --exclude ".git" --exclude "node_modules" . ~ "$1"
    }


    _fzf_comprun() {
      local command=$1
      shift

      case "$command" in
        cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
        export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
        ssh)          fzf --preview 'dig {}'                   "$@" ;;
        *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
      esac
    }

    zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
fi


if command -v zoxide &> /dev/null;
then
   eval "$(zoxide init zsh)"
   alias cd="z"
fi


alias pbcopy='xclip -selection clipboard -r'
alias pbpaste='xclip -selection clipboard -o'
